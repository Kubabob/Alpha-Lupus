# bot.py

#emojis:
#‚úÖ

regulamin = """
¬ß1.1 Szanuj innych.
¬ß1.2 Je≈õli masz problem NIE b√≥j siƒô zapytaƒá, po to tu jeste≈õmy üòâ.
¬ß1.3 Staraj siƒô pisaƒá na kana≈Çach tematycznych, je≈õli nie wiesz gdzie powinien znale≈∫ƒá siƒô tw√≥j problem napisz na og√≥lnym.
¬ß1.4 Nie ma g≈Çupich pyta≈Ñ.
¬ß1.5 ≈ªaden jƒôzyk programowania nie jest gorszy od innych.
¬ß1.6 Zakaz przeklinania na kana≈Çach tekstowych, je≈ºeli naprawdƒô musisz, to cenzuruj, ale nie nadu≈ºywaj przekle≈Ñstw;
¬ß1.7 Zakaz wykorzystywania, oszukiwania i szanta≈ºowania innych u≈ºytkownik√≥w;
¬ß1.8 Zakaz reklamowania jakichkolwiek serwer√≥w, stron itp. bez zgody administracji.
"""

import os
import discord
from discord.ext import commands
from discord.ext import tasks
from dotenv import load_dotenv
import aiohttp
import random as r
from itertools import cycle
import time
import asyncio
import requests
from bs4 import BeautifulSoup

#openai.api_key = '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'

#ZA≈ÅADOWANIE TOKEN√ìW Z .env
load_dotenv()
TOKEN = os.getenv('DISCORD_TOKEN')
GUILD = os.getenv('DISCORD_GUILD')


#NADANIE BOTOWI INTENT(PRAWA)
intents = discord.Intents.all()


#UTWORZENIE BOTA
bot = commands.Bot(command_prefix='/', intents=intents)
bot.remove_command('help')


#ID GILDII
guild_id = 1046717079249768519


#ID KANA≈Å√ìW
przywitanie_id = 1046717746211209267
regulamin_id = 1046725335422599208
admin_channel_id = 1046725335422599209
ogloszenia_id = 1046725510232809572
admin_bot_id = 1060904715065495552


bot_status = cycle(['/help', 'KNALT', 'Smacznej Kawusi'])
@tasks.loop(seconds=10)
async def change_status():
    await bot.change_presence(activity=discord.Game(next(bot_status)))


@tasks.loop(minutes=5)
async def ps_get_info():
    guild = bot.get_guild(guild_id)

    login_url = 'https://ps.ug.edu.pl/login.web'

    payload = {
        'licznik' : 's',
        'login' : '285665',
        'pass' : 'Szotland12'
    }

    response = requests.Session()
    web_html = response.post(login_url, data=payload).text
    parsed_html = BeautifulSoup(web_html, 'html.parser')
    ogloszenia_ilosc = parsed_html.find(id='ilNieprzeczytanychOgloszen').text

    for channel in guild.channels:
        if channel.id == ogloszenia_id:
            if ogloszenia_ilosc != '0' and czy_wyslano == False:
                await channel.send(f'Na portalu studenta czeka na nas {ogloszenia_ilosc} og≈Çosze≈Ñ\n'
                                f'https://ps.ug.edu.pl/login.web')
                czy_wyslano = True
            elif ogloszenia_ilosc != '0':
                czy_wyslano = False
                #print('Brak nowych og≈Çosze≈Ñ')


#ROZPOCZƒòCIE DZIA≈ÅANIA BOTA
@bot.event
async def on_ready():

    guild = bot.get_guild(guild_id)

    roles = []
    for role in guild.roles:
        roles.append(role.name)
    
    print(f'{bot.user.name} zawy≈Ç!')
    print(f'cz≈Çonkowie: {[member.name for member in guild.members]}\nilo≈õƒá cz≈Çonkow: {guild.member_count}')
    print(f'role: {roles}')
    change_status.start()
    ps_get_info.start()

    await bot.tree.sync()

       
#PRZY≈ÅƒÑCZENIE CZ≈ÅONKA
@bot.event
async def on_member_join(member):
    guild = bot.get_guild(guild_id)

    for channel in guild.channels:
        if channel.id == przywitanie_id:
            await channel.send(
                f'Witaj {member.mention} na KN ALT!\n'
                f'Nie zapomnij o zapoznaniu siƒô z zasadami!\n'
                f'Zaznacz ‚úÖ i baw siƒô dobrze!'
                )


#USUNIƒòCIE CZ≈ÅONKA
@bot.event
async def on_member_remove(member):
    guild = bot.get_guild(guild_id)

    for channel in guild.channels:
        if channel.id == przywitanie_id:
            await channel.send(
                f'Bƒôdzie nam Ciƒô brakowa≈Ço {member.mention} :cry:'
                )
            await tasks.asyncio.sleep(5)
            await channel.send(
                f'Anyway'
            )


#NADANIE RANGI CZ≈ÅONEK PRZEZ REGULAMIN
@bot.event
async def on_raw_reaction_add(payload: discord.RawReactionActionEvent):
    rola_czlonek = discord.utils.get(payload.member.guild.roles, name='Czlonek')

    if payload.channel_id != regulamin_id:
        return

    print(f'{str(payload.emoji)}')
    if str(payload.emoji) == '‚úÖ':
        await payload.member.add_roles(rola_czlonek)


@bot.tree.command(name='help', description='/help [komenda]')
async def help(interaction: discord.Interaction, komenda : str = 'all'):
    if komenda == 'all':
        help_embed = discord.Embed(color=discord.Colour.purple())

        help_embed.set_author(name='/help')
        help_embed.add_field(
            name='/ping',
            value='Grasz w pingla z botem',
            inline=False
            )
        help_embed.add_field(
            name='/dog',
            value='Pokazuje pieska',
            inline=False
            )
        help_embed.add_field(
            name='/cat',
            value='Pokazuje kotka',
            inline=False
        )
        help_embed.add_field(
            name='/echo [co chcesz ≈ºebym powiedzia≈Ç]',
            value='Daj mi co≈õ powiedzieƒá',
            inline=False
        )
        help_embed.add_field(
            name='/rps [papier/kamien/no≈ºyce] lub /rock_paper_scissors lub /pkn',
            value='Papier/Kamien/Nozyce => Kamie≈Ñ, Papier, No≈ºyce z botem',
            inline=False
        )
        help_embed.add_field(
            name='/rock',
            value='Kamie≈Ñ',
            inline=False
        )
        help_embed.add_field(
            name='/paper',
            value='Papier',
            inline=False
        )
        help_embed.add_field(
            name="/scissors",
            value='No≈ºyce',
            inline=False
        )
        help_embed.add_field(
            name='/moneta lub /rm',
            value='Rzut monetƒÖ',
            inline=False
        )
        help_embed.add_field(
            name='/roll lub /r [ilo≈õƒá_kostek] [ilo≈õƒá_≈õcianek]',
            value='Rzut kostkƒÖ',
            inline=False
        )
        await interaction.response.send_message(embed=help_embed, ephemeral=True)
    elif komenda == 'ping':
        await interaction.response.send_message(f'Zagraj w ping ponga z botem', ephemeral=True)
    elif komenda == 'dog':
        await interaction.response.send_message(f'Pokazuje pieska', ephemeral=True)
    elif komenda == 'cat':
        await interaction.response.send_message(f'Pokazuje kotka', ephemeral=True)
    elif komenda == 'echo':
        await interaction.response.send_message(f'/echo [co chcesz ≈ºeby bot napisa≈Ç]', ephemeral=True)
    elif komenda == 'rps':
        await interaction.response.send_message(f'/rps [papier/kamien/no≈ºyce\nZagraj z botem w papier kamie≈Ñ no≈ºyce', ephemeral=True)
    elif komenda == 'rock':
        await interaction.response.send_message(f'Rzucasz kamie≈Ñ', ephemeral=True)
    elif komenda == 'paper':
        await interaction.response.send_message(f'Pokazujesz papier', ephemeral=True)
    elif komenda == 'scissors':
        await interaction.response.send_message(f'Wyjmujesz no≈ºyce', ephemeral=True)
    elif komenda == 'moneta' or komenda == 'rm':
        await interaction.response.send_message(f'Rzut monetƒÖ', ephemeral=True)
    elif komenda == 'roll' or komenda == 'r':
        await interaction.response.send_message(f'/r [ilo≈õƒá_kostek] [ilo≈õƒá_≈õcianek]', ephemeral=True)
    else:
        await interaction.response.send_message(f'Nie znam takiej komendy', ephemeral=True)

#HELP @ADMIN
@bot.tree.command(name='help_admin', description='/help_admin [komenda]')
@commands.has_permissions(manage_channels=True)
async def help_admin(interaction: discord.Interaction, komenda : str = 'all'):
    

    if komenda == 'all':
        help_admin_embed = discord.Embed(color=discord.Colour.purple())

        help_admin_embed.set_author(name='/help_admin')
        help_admin_embed.add_field(
        name='/regulamin_maker',
        value='S≈Çu≈ºy do stworzenia regulaminu'
        )
        await interaction.response.send_message(embed=help_admin_embed, ephemeral=True)
    elif komenda == 'regulamin_maker':
        await interaction.response.send_message(f'S≈Çu≈ºy do stworzenia regulaminu', ephemeral=True)
    else:
        await interaction.response.send_message(f'Nie znam takiej komendy', ephemeral=True)


#TWORZENIE REGULAMINU
@bot.tree.command(name='regulamin_maker', description='S≈Çuzy do stworzenia regulaminu')
@commands.has_permissions(manage_channels=True)
async def regulamin_maker(interaction: discord.Interaction):
    regulamin_message = await interaction.channel.send(regulamin)
    await regulamin_message.add_reaction('‚úÖ')


#ERROR DO TWORZENIA REGULAMINU
@regulamin_maker.error
async def regulamin_maker_error(ctx, error):
    if isinstance(error, commands.MissingPermissions):
        error_text = f'''Nie masz uprawnie≈Ñ do komendy "regulamin_maker"'''
        await ctx.channel.send(error_text)


'''@bot.komenda(pass_context = True)
async def clear(ctx):
    print(f'{ctx.channel_id}')
    await ctx.channel.delete_messages(ctx.channel.messages)
    '''

#GRA W PING PONGA
@bot.tree.command(name='ping', description='zwraca PONG')
async def ping(interaction: discord.Interaction):
    await interaction.response.send_message("pong :ping_pong:")

@bot.tree.command(name='slash', description='test')
async def slash(interaction: discord.Interaction, number: int, string: str):
    await interaction.response.send_message(f'Modify {number=} {string=}', ephemeral=True)


#BOT PISZE TO CO TY
@bot.tree.command(name='echo', description='Zmu≈õ bota do napisania czego≈õ')
async def echo(interaction: discord.Interaction, text: str):
    await interaction.response.send_message(f'{text}')


#BOT WYSWIETLA LOSOWEGO KOTA
@bot.tree.command(name='kot', description='Pokazuje kota')
async def kot(interaction: discord.Interaction):
    async with aiohttp.ClientSession() as session:
        async with session.get('http://aws.random.cat/meow') as r:
            if r.status == 200:
                js = await r.json()
                await interaction.response.send_message(js['file'])


#BOT WYSWIETLA LOSOWEGO PSA
@bot.tree.command(name='pies', description='Pokazuje psa')
async def pies(interaction: discord.Interaction):
    async with aiohttp.ClientSession() as session:
        async with session.get('https://random.dog/woof.json') as r:
            if r.status == 200:
                js = await r.json()
                await interaction.response.send_message(js['url'])

#cute - animal


def rps_random():
    moves = ['KAMIEN', 'PAPIER', 'NOZYCE']
    return r.choice(moves)

def rps_game(player, bot):
    if player == bot:
        return "Tie"
    elif player == 'KAMIEN':
        if bot == 'PAPIER':
            return 'Lose'
        else:
            return 'Win'
    elif player == 'PAPIER':
        if bot == 'NOZYCE':
            return 'Lose'
        else:
            return 'Win'
    elif player == 'NOZYCE':
        if bot == 'KAMIEN':
            return 'Lose'
        else:
            return 'Win'
    else:
        return 'error'

@bot.tree.command(name='kamie≈Ñ', description='Rzucasz kamie≈Ñ')
async def kamie≈Ñ(interaction: discord.Interaction):
    bot=rps_random()
    wynik = rps_game(player='ROCK', bot=bot)
    if wynik == 'Tie':
        await interaction.response.send_message(f'{bot}\nRemis! Spr√≥bujmy jeszcze raz!', ephemeral=True)
    elif wynik == 'Lose':
        await interaction.response.send_message(f'{bot}\nPrzegra≈Çe≈õ, ≈ºyczƒô wiƒôcej szczƒô≈õcia nastƒôpnym razem :wink:', ephemeral=True)
    else:
        await interaction.response.send_message(f'{bot}\nWygra≈Çe≈õ!', ephemeral=True)
        await tasks.asyncio.sleep(1)
        await interaction.channel.send('Tym razem :upside_down:', ephemeral=True)

@bot.tree.command(name='papier', description='Pokazujesz papier')
async def papier(interaction: discord.Interaction):
    bot=rps_random()
    wynik = rps_game(player='PAPIER', bot=bot)
    if wynik == 'Tie':
        await interaction.response.send_message(f'{bot}\nRemis! Spr√≥bujmy jeszcze raz!', ephemeral=True)
    elif wynik == 'Lose':
        await interaction.response.send_message(f'{bot}\nPrzegra≈Çe≈õ, ≈ºyczƒô wiƒôcej szczƒô≈õcia nastƒôpnym razem :wink:', ephemeral=True)
    else:
        await interaction.response.send_message(f'{bot}\nWygra≈Çe≈õ!', ephemeral=True)
        await tasks.asyncio.sleep(1)
        await interaction.channel.send('Tym razem :upside_down:', ephemeral=True)

@bot.tree.command(name='nozyce', description='Wyjmujesz nozyce')
async def nozyce(interaction: discord.Interaction):
    bot=rps_random()
    wynik = rps_game(player='NOZYCE', bot=bot)
    if wynik == 'Tie':
        await interaction.response.send_message(f'{bot}\nRemis! Spr√≥bujmy jeszcze raz!', ephemeral=True)
    elif wynik == 'Lose':
        await interaction.response.send_message(f'{bot}\nPrzegra≈Çe≈õ, ≈ºyczƒô wiƒôcej szczƒô≈õcia nastƒôpnym razem :wink:', ephemeral=True)
    else:
        await interaction.response.send_message(f'{bot}\nWygra≈Çe≈õ!', ephemeral=True)
        await tasks.asyncio.sleep(1)
        await interaction.channel.send('Tym razem :upside_down:', ephemeral=True)

'''@bot.komenda()
async def chat(ctx, *args):
    prompt = ' '.join(args)
    response = openai.Completion.create(
        model='text-davinci-003',
        prompt=prompt,
        max_tokens=1024,
        temperature=0.5
    )
    await ctx.message.channel.send(response.get("text"))'''

@bot.tree.command(name='rps', description='Zagraj w papier kamie≈Ñ nozyce')
async def rps(interaction: discord.Interaction, wybor: str):
    wybor = wybor.lower()
    if wybor == 'kamie≈Ñ':
        wybor = 'kamien'
    elif wybor == 'no≈ºyce':
        wybor = 'nozyce'

    opcje = ['papier', 'kamien', 'nozyce']
    losowanko = r.choice(opcje)

    if wybor == losowanko:
        await interaction.response.send_message(f'{losowanko.upper()}!\nAjaj, remis. Jeszcze raz?', ephemeral=True)
    elif wybor == 'kamien':
        if losowanko == 'papier':
            await interaction.response.send_message(f'{losowanko.upper()}!\nWygra≈Çeeem! Nooob ahhahahahxXDDXDXdxD11!1!!!1', ephemeral=True)
        else:
            await interaction.response.send_message(f'{losowanko.upper()}!\nNieeee...! Pokona≈Çe≈õ mnie :CCCC', ephemeral=True)
    elif wybor == 'papier':
        if losowanko == 'nozyce':
            await interaction.response.send_message(f'{losowanko.upper()}!\nWygra≈Çeeem! Nooob ahhahahahxXDDXDXdxD11!1!!!1', ephemeral=True)
        else:
            await interaction.response.send_message(f'{losowanko.upper()}!\nNieeee...! Pokona≈Çe≈õ mnie :CCCC', ephemeral=True)
    elif wybor == 'nozyce':
        if losowanko == 'kamien':
            await interaction.response.send_message(f'{losowanko.upper()}!\nWygra≈Çeeem! Nooob ahhahahahxXDDXDXdxD11!1!!!1', ephemeral=True)
        else:
            await interaction.response.send_message(f'{losowanko.upper()}!\nNieeee...! Pokona≈Çe≈õ mnie :CCCC', ephemeral=True)
    else:
        await interaction.response.send_message('Umiesz pisaƒá???', ephemeral=True)

@bot.tree.command(name='roll', description='Rzuƒá x kostkami y ≈õciennymi')
async def roll(interaction: discord.Interaction, kostki: int, scianki: int):
    if scianki > 100:
        if kostki > 200:
            await interaction.response.send_message('Mam tylko 200 ko≈õci!\nA najwiƒôksza kostka to d100', ephemeral=True)
        else:
            await interaction.response.send_message('Najwiƒôksza kostka to d100!', ephemeral=True)
    elif kostki > 200:
        await interaction.response.send_message(f'Mam tylko 200 kostek d{scianki}!', ephemeral=True)
    else:
        rolls = [r.randint(1, scianki) for i in range(kostki)]
        odp = ''
        last_roll = rolls.pop(-1)
        try:
            for i in range(-1, kostki):
                odp += f'{str(rolls[i+1])}, '
        except Exception:
            odp += f'{last_roll}\nSuma wynosi: {sum(rolls) + last_roll}'

        rolls.append(last_roll)
    
        await interaction.response.send_message(
            f'{odp}\n'
            f'Najwy≈ºsza warto≈õƒá: {max(rolls)}', ephemeral=True)

@bot.tree.command(name='moneta', description='Rzut monetƒÖ')
async def moneta(interaction: discord.Interaction):
    moneta = r.randint(0, 1)
    if moneta == 0:
        await interaction.response.send_message('ORZE≈Å', ephemeral=True)
    else:
        await interaction.response.send_message('RESZKA', ephemeral=True)


#URUCHOMIENIE BOTA
bot.run(TOKEN)
